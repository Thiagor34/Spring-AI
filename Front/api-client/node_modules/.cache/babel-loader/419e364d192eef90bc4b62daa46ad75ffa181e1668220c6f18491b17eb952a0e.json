{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nugon\\\\Documents\\\\INTELIJ\\\\SpringAI\\\\Front\\\\api-client\\\\src\\\\pages\\\\recipe\\\\RecipeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../../services/api\";\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeGenerator() {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [dietaryRestriction, setDietaryRestriction] = useState('');\n  const [recipe, setRecipe] = useState('');\n  const createRecipe = async () => {\n    try {\n      const response = await api.get('recipe-creator', {\n        params: {\n          ingredients,\n          dietaryRestriction,\n          cuisine\n        }\n      });\n      const data = await response.data;\n      console.log(data);\n      setRecipe(data);\n    } catch (error) {\n      console.log(\"Error generating recipe : \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gerar Receitas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value),\n        placeholder: \"Escreva os ingredientes (separados por v\\xEDrgula)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cuisine,\n        onChange: e => setCuisine(e.target.value),\n        placeholder: \"Escreva o tipo de cozinha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: dietaryRestriction,\n        onChange: e => setDietaryRestriction(e.target.value),\n        placeholder: \"Escreva o tipo de restri\\xE7\\xE3o de dieta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createRecipe,\n        children: \"Perguntar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(RecipeGenerator, \"NFDpEZKnpbrvRoo8epCqFOvZCmc=\");\n_c = RecipeGenerator;\nexport default RecipeGenerator;\nvar _c;\n$RefreshReg$(_c, \"RecipeGenerator\");","map":{"version":3,"names":["React","useState","api","ReactMarkdown","jsxDEV","_jsxDEV","RecipeGenerator","_s","ingredients","setIngredients","cuisine","setCuisine","dietaryRestriction","setDietaryRestriction","recipe","setRecipe","createRecipe","response","get","params","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nugon/Documents/INTELIJ/SpringAI/Front/api-client/src/pages/recipe/RecipeGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction RecipeGenerator(){\r\n        const [ingredients, setIngredients] = useState('');\r\n        const [cuisine, setCuisine] = useState('');\r\n        const [dietaryRestriction, setDietaryRestriction] = useState('');\r\n        const [recipe, setRecipe] = useState('');\r\n\r\n        const createRecipe = async () => {\r\n             try {\r\n            const response = await api.get('recipe-creator', {\r\n                params: {ingredients, dietaryRestriction, cuisine}\r\n            })\r\n            const data = await response.data;\r\n            console.log(data)\r\n            setRecipe(data);\r\n            \r\n        } catch (error) {\r\n            console.log(\"Error generating recipe : \", error)\r\n        }\r\n        }\r\n        \r\n\r\n    return (\r\n        <div>\r\n            <h2>Gerar Receitas</h2>\r\n             <div className=\"inputs-container\">\r\n            <input type=\"text\"\r\n            value={ingredients}\r\n            onChange={(e) => setIngredients(e.target.value)}\r\n            placeholder=\"Escreva os ingredientes (separados por vírgula)\"></input>\r\n\r\n            <input type=\"text\"\r\n            value={cuisine}\r\n            onChange={(e) => setCuisine(e.target.value)}\r\n            placeholder=\"Escreva o tipo de cozinha\"></input>\r\n\r\n            <input type=\"text\"\r\n            value={dietaryRestriction}\r\n            onChange={(e) => setDietaryRestriction(e.target.value)}\r\n            placeholder=\"Escreva o tipo de restrição de dieta\"></input>\r\n            \r\n            <button onClick={createRecipe}>Perguntar</button>\r\n\r\n            <div className=\"output\">\r\n                <ReactMarkdown>{recipe}</ReactMarkdown>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default RecipeGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}