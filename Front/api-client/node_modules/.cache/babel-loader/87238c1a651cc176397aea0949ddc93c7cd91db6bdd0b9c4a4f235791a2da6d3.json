{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nugon\\\\Documents\\\\INTELIJ\\\\SpringAI\\\\Front\\\\api-client\\\\src\\\\pages\\\\chat\\\\TalkWithAI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TalkWithAi() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const askAi = async () => {\n    try {\n      const response = await api.get('ask-ai-options', {\n        params: {\n          prompt\n        }\n      });\n      const data = await response.data;\n      console.log(data);\n      setResponse(data);\n    } catch (error) {\n      console.log(\"Error generating response : \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Perguntar para a IA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      placeholder: \"Escreva o prompt para IA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: askAi,\n      children: \"Perguntar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(TalkWithAi, \"f7/ly1Eyh5qbUOx1OL12RYnrAkI=\");\n_c = TalkWithAi;\nexport default TalkWithAi;\nvar _c;\n$RefreshReg$(_c, \"TalkWithAi\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","TalkWithAi","_s","prompt","setPrompt","response","setResponse","askAi","get","params","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/nugon/Documents/INTELIJ/SpringAI/Front/api-client/src/pages/chat/TalkWithAI.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../../services/api\";\r\n\r\nfunction TalkWithAi(){\r\n    const [prompt, setPrompt] = useState('');\r\n    const [response, setResponse] = useState('');\r\n\r\n    const askAi = async () => {\r\n        try {\r\n            const response = await api.get('ask-ai-options', {\r\n                params: {prompt}\r\n            })\r\n            const data = await response.data;\r\n            console.log(data)\r\n            setResponse(data);\r\n            \r\n        } catch (error) {\r\n            console.log(\"Error generating response : \", error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Perguntar para a IA</h2>\r\n            <input type=\"text\"\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            placeholder=\"Escreva o prompt para IA\"></input>\r\n\r\n            <button onClick={askAi}>Perguntar</button>\r\n\r\n            <div className=\"output\">\r\n                <p>{response}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TalkWithAi;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,KAAK,GAAG,MAAAA,CAAA,KAAY;IACtB,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAMP,GAAG,CAACU,GAAG,CAAC,gBAAgB,EAAE;QAC7CC,MAAM,EAAE;UAACN;QAAM;MACnB,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI;MAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBJ,WAAW,CAACI,IAAI,CAAC;IAErB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAClBC,KAAK,EAAEjB,MAAO;MACdkB,QAAQ,EAAGC,CAAC,IAAKlB,SAAS,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAA0B;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/ClB,OAAA;MAAQyB,OAAO,EAAElB,KAAM;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE1ClB,OAAA;MAAK0B,SAAS,EAAC,QAAQ;MAAAZ,QAAA,eACnBd,OAAA;QAAAc,QAAA,EAAIT;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAAChB,EAAA,CAlCQD,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}