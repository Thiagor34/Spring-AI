{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nugon\\\\Documents\\\\INTELIJ\\\\SpringAI\\\\Front\\\\api-client\\\\src\\\\pages\\\\image\\\\ImageGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageGenerator() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n  const generateImage = async () => {\n    try {\n      const response = await api.get('recipe-creator', {\n        params: {\n          ingredients,\n          dietaryRestriction,\n          cuisine\n        }\n      });\n      const data = await response.data;\n      console.log(data);\n      setRecipe(data);\n    } catch (error) {\n      console.log(\"Error generating recipe : \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gerar Imagens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      placeholder: \"Escreva o tipo imagem que deseja gerar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateImage,\n      children: \"Gerar Imagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: [imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: `Generated ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)), [...Array(4 - imageUrls.length)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-image-slot\"\n      }, index + imageUrls.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageGenerator, \"GsEgbnnJTaVnZrFii5ffKE1yVR8=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","ImageGenerator","_s","prompt","setPrompt","imageUrls","setImageUrls","generateImage","response","get","params","ingredients","dietaryRestriction","cuisine","data","console","log","setRecipe","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","className","map","url","index","src","alt","Array","length","_","_c","$RefreshReg$"],"sources":["C:/Users/nugon/Documents/INTELIJ/SpringAI/Front/api-client/src/pages/image/ImageGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../../services/api\";\r\n\r\nfunction ImageGenerator(){\r\n\r\n    const [prompt, setPrompt] = useState('');\r\n    const [imageUrls, setImageUrls] = useState([]);\r\n\r\n    const generateImage = async () => {\r\n            try {\r\n        const response = await api.get('recipe-creator', {\r\n            params: {ingredients, dietaryRestriction, cuisine}\r\n        })\r\n        const data = await response.data;\r\n        console.log(data)\r\n        setRecipe(data);\r\n        \r\n    } catch (error) {\r\n        console.log(\"Error generating recipe : \", error)\r\n    }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gerar Imagens</h2>\r\n            <input type=\"text\"\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            placeholder=\"Escreva o tipo imagem que deseja gerar\"></input>\r\n            \r\n            <button onClick={generateImage}>Gerar Imagem</button>\r\n\r\n            <div className=\"image-grid\">\r\n                {imageUrls.map((url, index) => (\r\n                    <img key={index} src={url} alt={`Generated ${index}`} />\r\n            ))}\r\n            {[...Array(4 - imageUrls.length)].map((_, index) => (\r\n                <div key={index + imageUrls.length} className=\"empty-image-slot\"></div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    ); \r\n\r\n}\r\n\r\nexport default ImageGenerator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACR,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,gBAAgB,EAAE;QAC7CC,MAAM,EAAE;UAACC,WAAW;UAAEC,kBAAkB;UAAEC;QAAO;MACrD,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI;MAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBG,SAAS,CAACH,IAAI,CAAC;IAEnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,KAAK,CAAC;IACpD;EACA,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAClBC,KAAK,EAAEtB,MAAO;MACduB,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAwC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7DvB,OAAA;MAAQ8B,OAAO,EAAEvB,aAAc;MAAAY,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErDvB,OAAA;MAAK+B,SAAS,EAAC,YAAY;MAAAZ,QAAA,GACtBd,SAAS,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBlC,OAAA;QAAiBmC,GAAG,EAAEF,GAAI;QAACG,GAAG,EAAE,aAAaF,KAAK;MAAG,GAA3CA,KAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwC,CAC9D,CAAC,EACD,CAAC,GAAGc,KAAK,CAAC,CAAC,GAAGhC,SAAS,CAACiC,MAAM,CAAC,CAAC,CAACN,GAAG,CAAC,CAACO,CAAC,EAAEL,KAAK,kBAC3ClC,OAAA;QAAoC+B,SAAS,EAAC;MAAkB,GAAtDG,KAAK,GAAG7B,SAAS,CAACiC,MAAM;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoC,CACzE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAACrB,EAAA,CAxCQD,cAAc;AAAAuC,EAAA,GAAdvC,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}